name: CI
on:
  push:
    branches:
      - '**'
      - '!dependabot/**'
  pull_request:
    # NOTE: does not work for some reasons
    # branches:
    #   - 'dependabot/**'

env:
  STRIPE_PUBLISHABLE_KEY: ${{ secrets.TEST_STRIPE_PUBLISHABLE_KEY }}
  STRIPE_SECRET_KEY: ${{ secrets.TEST_STRIPE_SECRET_KEY }}
  COMPOSE_FILE: docker-compose.yml:docker-compose.playwright.yml

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  changed_files:
    runs-on: ubuntu-latest
    outputs:
      files: ${{ steps.diff.outputs.files }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: 'Collect changed files'
        id: diff
        run: |
          echo 'files<<EOF' >> $GITHUB_OUTPUT
          git diff --name-only --merge-base origin/main >> $GITHUB_OUTPUT
          echo 'EOF' >> $GITHUB_OUTPUT

  server_test:
    needs: changed_files
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        runtime:
          - server_type: ruby
            server_image: ruby:latest
          - server_type: ruby
            server_image: ruby:2.7
          - server_type: node
            server_image: node:latest
          - server_type: node
            server_image: node:lts
          - server_type: python
            server_image: python:latest
          - server_type: python
            server_image: python:3.7
          - server_type: java
            server_image: maven:latest
          - server_type: java
            server_image: maven:3.8-openjdk-8
          - server_type: go
            server_image: golang:latest
          - server_type: go
            server_image: golang:1.17
          - server_type: dotnet
            server_image: mcr.microsoft.com/dotnet/sdk:6.0
        target:
          - sample: custom-payment-flow
            tests: custom_payment_flow_server_spec.rb
          - sample: prebuilt-checkout-page
            tests: prebuilt_checkout_page_spec.rb
          - sample: payment-element
            tests: payment_element_server_spec.rb
        include:
          - runtime:
              server_type: node-typescript
              server_image: node:latest
            target:
              sample: custom-payment-flow
              tests: custom_payment_flow_server_spec.rb
          - runtime:
              server_type: node-typescript
              server_image: node:lts
            target:
              sample: custom-payment-flow
              tests: custom_payment_flow_server_spec.rb
    steps:
      - id: if_running
        run: |
          prefix="${{ matrix.target.sample }}/server/${{ matrix.runtime.server_type }}"

          if [[ "${{ github.ref }}" = "refs/heads/main" ]] || \
            [[ $(echo "${{ needs.changed_files.outputs.files }}" | grep -E "^${prefix}") ]]
          then echo 'running=true' >> $GITHUB_OUTPUT
          fi

      - uses: actions/checkout@v3
        if: ${{ steps.if_running.outputs.running }}

      - uses: actions/checkout@v3
        if: ${{ steps.if_running.outputs.running }}
        with:
          repository: 'stripe-samples/sample-ci'
          path: 'sample-ci'

      - name: Run tests
        if: ${{ steps.if_running.outputs.running }}
        run: |
          source sample-ci/helpers.sh
          setup_dependencies

          install_docker_compose_settings
          export STRIPE_WEBHOOK_SECRET=$(retrieve_webhook_secret)
          cat <<EOF >> .env
            DOMAIN=http://web:4242
            PRICE=${{ secrets.TEST_PRICE }}
            PAYMENT_METHOD_TYPES="card"
          EOF

          configure_docker_compose_for_integration "${{ matrix.target.sample }}" "${{ matrix.runtime.server_type }}" ../../client/html "${{ matrix.runtime.server_image }}"

          docker-compose up -d && wait_web_server
          docker-compose exec -T runner bundle exec rspec spec/${{ matrix.target.tests }}

      - name: Collect debug information
        if: ${{ steps.if_running.outputs.running && failure() }}
        run: |
          cat .env
          cat docker-compose.yml
          docker-compose ps -a
          docker-compose logs web

  e2e_test:
    needs: changed_files
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        implementation:
          - client_type: html
            domain: http://web:4242
            profile: e2e
          - client_type: react-cra
            domain: http://frontend:3000
            profile: frontend
        target:
          - sample: custom-payment-flow
            tests: custom_payment_flow_e2e_spec.rb
          - sample: prebuilt-checkout-page
            tests: prebuilt_checkout_page_e2e_spec.rb
          - sample: payment-element
            tests: payment_element_e2e_spec.rb
        include:
          - implementation:
              client_type: vue-cva
              domain: http://frontend:3000
              profile: frontend
            target:
              sample: prebuilt-checkout-page
              tests: prebuilt_checkout_page_e2e_spec.rb
          - implementation:
              client_type: vue-cva
              domain: http://frontend:3000
              profile: frontend
            target:
              sample: payment-element
              tests: payment_element_e2e_spec.rb
    steps:
      - id: if_running
        run: |
          prefix="${{ matrix.target.sample }}/client/${{ matrix.implementation.client_type }}"

          if [[ "${{ github.ref }}" = "refs/heads/main" ]] || \
            [[ $(echo "${{ needs.changed_files.outputs.files }}" | grep -E "^${prefix}") ]]
          then echo 'running=true' >> $GITHUB_OUTPUT
          fi

      - uses: actions/checkout@v3
        if: ${{ steps.if_running.outputs.running }}

      - uses: actions/checkout@v3
        if: ${{ steps.if_running.outputs.running }}
        with:
          repository: 'stripe-samples/sample-ci'
          path: 'sample-ci'

      - name: Run tests
        if: ${{ steps.if_running.outputs.running }}
        run: |
          echo "$(cat ${{ matrix.target.sample }}/client/react-cra/package.json | jq '.proxy = "http://web:4242"')" > ${{ matrix.target.sample }}/client/react-cra/package.json

          source sample-ci/helpers.sh
          setup_dependencies

          install_docker_compose_settings
          export STRIPE_WEBHOOK_SECRET=$(retrieve_webhook_secret)
          cat <<EOF >> .env
          DOMAIN=${{ matrix.implementation.domain }}
          PRICE=${{ secrets.TEST_PRICE }}
          PAYMENT_METHOD_TYPES="card"
          EOF

          configure_docker_compose_for_integration "${{ matrix.target.sample }}" node ../../client/${{ matrix.implementation.client_type }} node:latest
          docker-compose --profile="${{ matrix.implementation.profile }}" up -d && wait_web_server && wait_web_server "${{ matrix.implementation.domain }}"

          command="docker-compose exec -T runner bundle exec rspec spec/${{ matrix.target.tests }}"
          $command \
            || $command --only-failures \
            || $command --only-failures --format RSpec::Github::Formatter --format progress

      - name: Collect debug information
        if: ${{ steps.if_running.outputs.running && failure() }}
        run: |
          cat .env
          cat docker-compose.yml
          docker-compose ps -a
          docker-compose --profile="${{ matrix.implementation.profile }}" logs web frontend

          docker cp $(docker-compose ps -qa runner | head -1):/work/tmp .

      - name: Upload capybara screenshots
        if: ${{ steps.if_running.outputs.running && failure() }}
        uses: actions/upload-artifact@v2
        with:
          name: screenshots
          path: |
            tmp/capybara

  snapshot_test:
    needs: changed_files
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        implementation:
          - client_type: html
            domain: http://web:4242
            profile: e2e
          - client_type: react-cra
            domain: http://frontend:3000
            profile: frontend
        target:
          - sample: custom-payment-flow

    steps:
      - id: if_running
        run: |
          prefix="${{ matrix.target.sample }}/client/${{ matrix.implementation.client_type }}"

          if [[ "${{ github.ref }}" = "refs/heads/main" ]] || \
            [[ $(echo "${{ needs.changed_files.outputs.files }}" | grep -E "^${prefix}") ]]
          then echo 'running=true' >> $GITHUB_OUTPUT
          fi

      - uses: actions/checkout@v3
        if: ${{ steps.if_running.outputs.running }}

      - uses: actions/checkout@v3
        if: ${{ steps.if_running.outputs.running }}
        with:
          repository: 'stripe-samples/sample-ci'
          path: 'sample-ci'

      - name: Run tests
        if: ${{ steps.if_running.outputs.running }}
        run: |
          echo "$(cat ${{ matrix.target.sample }}/client/react-cra/package.json | jq '.proxy = "http://web:4242"')" > ${{ matrix.target.sample }}/client/react-cra/package.json

          source sample-ci/helpers.sh
          setup_dependencies

          install_docker_compose_settings
          export STRIPE_WEBHOOK_SECRET=$(retrieve_webhook_secret)
          cat <<EOF >> .env
          DOMAIN=${{ matrix.implementation.domain }}
          PRICE=${{ secrets.TEST_PRICE }}
          PAYMENT_METHOD_TYPES="card"
          EOF

          configure_docker_compose_for_integration "${{ matrix.target.sample }}" node ../../client/${{ matrix.implementation.client_type }} node:latest
          docker-compose --profile="${{ matrix.implementation.profile }}" up -d && wait_web_server && wait_web_server "${{ matrix.implementation.domain }}"

          docker compose run --rm playwright npm ci
          docker compose exec -T playwright npm run test -- --retries 2 ${{ matrix.target.sample }}-e2e-${{ matrix.implementation.client_type }}.spec.ts

      - name: Collect debug information
        if: ${{ steps.if_running.outputs.running && failure() }}
        run: |
          cat .env
          cat docker-compose.yml
          docker-compose ps -a
          docker-compose --profile="${{ matrix.implementation.profile }}" logs web frontend

          docker compose cp playwright:/work/playwright/test-results playwright/
          docker cp $(docker-compose ps -qa runner | head -1):/work/tmp .

      - name: Upload Playwright screenshots
        if: ${{ steps.if_running.outputs.running && failure() }}
        uses: actions/upload-artifact@v2
        with:
          name: playwright-screenshots
          path: |
            playwright/test-results

  android_build:
    needs: changed_files
    runs-on: ubuntu-latest
    steps:
      - id: if_running
        run: |
          prefix="custom-payment-flow/client/android-kotlin"

          if [[ "${{ github.ref }}" = "refs/heads/main" ]] || \
            [[ $(echo "${{ needs.changed_files.outputs.files }}" | grep -E "^${prefix}") ]]
          then echo 'running=true' >> $GITHUB_OUTPUT
          fi

      - uses: actions/checkout@v3
        if: ${{ steps.if_running.outputs.running }}

      - name: Build
        if: ${{ steps.if_running.outputs.running }}
        working-directory: custom-payment-flow/client/android-kotlin
        run: |
          ./gradlew build

  ios_build:
    needs: changed_files
    runs-on: macos-11
    steps:
      - id: if_running
        run: |
          prefix="custom-payment-flow/client/ios-swiftui"

          if [[ "${{ github.ref }}" = "refs/heads/main" ]] || \
            [[ $(echo "${{ needs.changed_files.outputs.files }}" | grep -E "^${prefix}") ]]
          then echo 'running=true' >> $GITHUB_OUTPUT
          fi

      - uses: actions/checkout@v3
        if: ${{ steps.if_running.outputs.running }}

      - name: Build
        if: ${{ steps.if_running.outputs.running }}
        working-directory: custom-payment-flow/client/ios-swiftui
        run: |
          pod install
          xcodebuild build \
                     -scheme AcceptAPayment \
                     -workspace AcceptAPayment.xcworkspace/ \
                     CODE_SIGN_IDENTITY="" \
                     CODE_SIGNING_REQUIRED="NO" \
                     CODE_SIGN_ENTITLEMENTS="" \
                     CODE_SIGNING_ALLOWED="NO"

  auto-merge-dependabot-prs:
    if: ${{ github.event.pull_request && github.actor == 'dependabot[bot]' }}
    needs:
      - server_test
      - e2e_test
      - snapshot_test
      - android_build
      - ios_build
    permissions:
      contents: write
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
      - name: Dependabot metadata
        id: metadata
        uses: dependabot/fetch-metadata@v1.1.1
        with:
          github-token: '${{ secrets.GITHUB_TOKEN }}'
      - name: Enable auto-merge for Stripe SDKs
        if: |
          (contains(steps.metadata.outputs.dependency-names, 'github.com/stripe/stripe-go/v72') ||
           contains(steps.metadata.outputs.dependency-names, 'Stripe.net') ||
           contains(steps.metadata.outputs.dependency-names, 'com.stripe:stripe-java') ||
           contains(steps.metadata.outputs.dependency-names, 'stripe/stripe-php') ||
           contains(steps.metadata.outputs.dependency-names, 'stripe'))
        run: gh pr merge --auto --merge "$PR_URL"
        env:
          PR_URL: ${{github.event.pull_request.html_url}}
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
